apply plugin: 'com.android.library'
def rootAndroid = rootProject.ext.android
def sdkVersion = rootProject.ext.sdk_version

android {
    compileSdkVersion rootAndroid.compileSdkVersion
    buildToolsVersion rootAndroid.buildToolsVersion


    defaultConfig {
        minSdkVersion rootAndroid.minSdkVersion
        targetSdkVersion rootAndroid.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    //更改aar文件生成路径和名字
    libraryVariants.all {
        def buildType = it.buildType.name
        if (buildType == "release") {
            it.packageLibrary.destinationDir = file("aar")
        }
        it.outputs.each {
            if (buildType == "release") {
                it.outputFileName = rootProject.name + '_' + rootAndroid.applicationId + '_' + sdkVersion.version + ".aar"
            }
        }
    }

}


def SDK_BASENAME = rootProject.name + '_' + rootAndroid.applicationId + '_' + sdkVersion.version

def sdkDestinationPath = "../jars"
def zipFile = file('build/intermediates/bundles/release/classes.jar')

task deleteBuild(type: Delete) {
    delete sdkDestinationPath + SDK_BASENAME  + ".jar"
}

task makeJar(type: Jar) {
    from zipTree(zipFile)
    from fileTree(dir: 'src/main',includes: ['assets/**'])
    baseName = SDK_BASENAME
    destinationDir = file(sdkDestinationPath)
}

dependencies {

    implementation 'com.android.support:appcompat-v7:27.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
//生成java格式的jar包
task aNxosJar(type: Jar, dependsOn: ['assembleRelease']) {
    archiveName = rootProject.name + '_' + rootAndroid.applicationId + '_' + sdkVersion.version + '.jar'
    //from('build/intermediates/classes/release','src/main/java')
    from('build/intermediates/classes/release')
    destinationDir = file('jar/')
    exclude('android')
    exclude('**/R.class')
    exclude('**/R\$*.class')
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Implementation-Version': '' + version,
                'Built-Date': new Date().getDateTimeString(),
                'Built-With': "gradle-" + project.getGradle().getGradleVersion() + ',groovy-' + GroovySystem.getVersion(),
                'Created-By': 'Java ' + System.getProperty('java.version') + ' (' + System.getProperty('java.vendor') + ')')
    }
}
